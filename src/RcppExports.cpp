// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rmatn
arma::mat rmatn(arma::mat M, arma::mat Q, arma::mat P);
RcppExport SEXP _fdr_rmatn(SEXP MSEXP, SEXP QSEXP, SEXP PSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    rcpp_result_gen = Rcpp::wrap(rmatn(M, Q, P));
    return rcpp_result_gen;
END_RCPP
}
// dmatn
double dmatn(arma::mat X, arma::mat M, arma::mat Q, arma::mat P, bool logd);
RcppExport SEXP _fdr_dmatn(SEXP XSEXP, SEXP MSEXP, SEXP QSEXP, SEXP PSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmatn(X, M, Q, P, logd));
    return rcpp_result_gen;
END_RCPP
}
// rinvwish
arma::mat rinvwish(int v, arma::mat S);
RcppExport SEXP _fdr_rinvwish(SEXP vSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(rinvwish(v, S));
    return rcpp_result_gen;
END_RCPP
}
// dinvwish
double dinvwish(arma::mat Sigma, int v, arma::mat S, bool logd);
RcppExport SEXP _fdr_dinvwish(SEXP SigmaSEXP, SEXP vSEXP, SEXP SSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< int >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dinvwish(Sigma, v, S, logd));
    return rcpp_result_gen;
END_RCPP
}
// dinvwish2
double dinvwish2(arma::mat Sigma, int v, arma::mat S, bool logd);
RcppExport SEXP _fdr_dinvwish2(SEXP SigmaSEXP, SEXP vSEXP, SEXP SSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< int >::type v(vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type S(SSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dinvwish2(Sigma, v, S, logd));
    return rcpp_result_gen;
END_RCPP
}
// rmultn
arma::vec rmultn(arma::vec m, arma::mat Sigma);
RcppExport SEXP _fdr_rmultn(SEXP mSEXP, SEXP SigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(rmultn(m, Sigma));
    return rcpp_result_gen;
END_RCPP
}
// dmultn
arma::vec dmultn(arma::mat x, arma::rowvec m, arma::mat Sigma, bool logd);
RcppExport SEXP _fdr_dmultn(SEXP xSEXP, SEXP mSEXP, SEXP SigmaSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmultn(x, m, Sigma, logd));
    return rcpp_result_gen;
END_RCPP
}
// rmatt
arma::mat rmatt(arma::mat M, arma::mat Q, arma::mat P, double v);
RcppExport SEXP _fdr_rmatt(SEXP MSEXP, SEXP QSEXP, SEXP PSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(rmatt(M, Q, P, v));
    return rcpp_result_gen;
END_RCPP
}
// dmatt
double dmatt(arma::mat X, arma::mat M, arma::mat Q, arma::mat P, double v, bool logd);
RcppExport SEXP _fdr_dmatt(SEXP XSEXP, SEXP MSEXP, SEXP QSEXP, SEXP PSEXP, SEXP vSEXP, SEXP logdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< double >::type v(vSEXP);
    Rcpp::traits::input_parameter< bool >::type logd(logdSEXP);
    rcpp_result_gen = Rcpp::wrap(dmatt(X, M, Q, P, v, logd));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_fdr_rmatn", (DL_FUNC) &_fdr_rmatn, 3},
    {"_fdr_dmatn", (DL_FUNC) &_fdr_dmatn, 5},
    {"_fdr_rinvwish", (DL_FUNC) &_fdr_rinvwish, 2},
    {"_fdr_dinvwish", (DL_FUNC) &_fdr_dinvwish, 4},
    {"_fdr_dinvwish2", (DL_FUNC) &_fdr_dinvwish2, 4},
    {"_fdr_rmultn", (DL_FUNC) &_fdr_rmultn, 2},
    {"_fdr_dmultn", (DL_FUNC) &_fdr_dmultn, 4},
    {"_fdr_rmatt", (DL_FUNC) &_fdr_rmatt, 4},
    {"_fdr_dmatt", (DL_FUNC) &_fdr_dmatt, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_fdr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
